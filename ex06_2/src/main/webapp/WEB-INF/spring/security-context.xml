<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
						http://www.springframework.org/schema/security/spring-security.xsd
						http://www.springframework.org/schema/beans
					    http://www.springframework.org/schema/beans/spring-beans.xsd">

<bean id="customAccessDenied" class="org.zerock.security.CustomAccessDeniedHandler"/>
<!-- <bean id="customLoginSuccess" class="org.zerock.security.CustomLoginSuccessHandler"/> -->
<bean id ="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/> <!-- 스프링에서 제공하는 패스워드보호 -->
<!-- <bean id="customPasswordEncoder" class="org.zerock.security.CustomNoOpPasswordEncoder"/> -->
<bean id="customUserDetailsService" class="org.zerock.security.CustomUserDetailsService"/>


<security:http>

	<security:intercept-url pattern="/sample/all" access="permitAll"/>
	<security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')"/>
	<security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')"/>
	
	<security:access-denied-handler ref="customAccessDenied"/> <!--  다양한처리를위해 class를만들어 설정 --> 
	<!-- <security:access-denied-handler error-page="/accessError"/> 매핑주소로 에러페이지설정 -->
	
	<!-- <security:form-login login-page="/customLogin" authentication-success-handler-ref="customLoginSuccess"/> --> <!-- 커스텀로그인페이지(만든) 지정 -->
	<security:form-login login-page="/customLogin"/> 
	
	<security:remember-me data-source-ref="dataSource" token-validity-seconds="604800"/>
	
	<security:logout logout-url="/customLogout" invalidate-session="true" delete-cookies="remember-me,JSESSION_ID"/>
	
</security:http>



<security:authentication-manager>
	<security:authentication-provider user-service-ref="customUserDetailsService">
		<!-- <security:jdbc-user-service data-source-ref="dataSource"
		 users-by-username-query="select userid, userpw, enabled from tbl_member where userid = ?"
		 authorities-by-username-query="select userid, auth from tbl_member_auth where userid = ?"/> -->
		<security:password-encoder ref="bcryptPasswordEncoder"/>
		<!-- <security:password-encoder ref="customPasswordEncoder"/> -->
		<!-- <security:user-service>
			<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER"/>
			<security:user name="admin" password="{noop}admin" authorities="ROLE_ADMIN"/>
		</security:user-service> -->
	</security:authentication-provider>
</security:authentication-manager>

</beans>
